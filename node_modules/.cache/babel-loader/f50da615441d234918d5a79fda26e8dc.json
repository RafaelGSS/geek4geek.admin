{"remainingRequest":"C:\\Users\\nogue\\OneDrive\\Área de Trabalho\\geek4geek.admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\nogue\\OneDrive\\Área de Trabalho\\geek4geek.admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\nogue\\OneDrive\\Área de Trabalho\\geek4geek.admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\nogue\\OneDrive\\Área de Trabalho\\geek4geek.admin\\src\\components\\Cards\\ChartCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\nogue\\OneDrive\\Área de Trabalho\\geek4geek.admin\\src\\components\\Cards\\ChartCard.vue","mtime":1553730674570},{"path":"C:\\Users\\nogue\\OneDrive\\Área de Trabalho\\geek4geek.admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nogue\\OneDrive\\Área de Trabalho\\geek4geek.admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\nogue\\OneDrive\\Área de Trabalho\\geek4geek.admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nogue\\OneDrive\\Área de Trabalho\\geek4geek.admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"chart-card\",\n  props: {\n    footerText: {\n      type: String,\n      default: \"\"\n    },\n    headerTitle: {\n      type: String,\n      default: \"Chart title\"\n    },\n    chartType: {\n      type: String,\n      default: \"Line\" // Line | Pie | Bar\n\n    },\n    chartOptions: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    chartResponsiveOptions: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    chartData: {\n      type: Object,\n      default: function _default() {\n        return {\n          labels: [],\n          series: []\n        };\n      }\n    },\n    dataBackgroundColor: {\n      type: String,\n      default: \"\"\n    }\n  },\n  data: function data() {\n    return {\n      chartId: \"no-id\"\n    };\n  },\n  methods: {\n    /***\r\n     * Initializes the chart by merging the chart options sent via props and the default chart options\r\n     */\n    initChart: function initChart() {\n      var chartIdQuery = \"#\".concat(this.chartId);\n      this.$Chartist[this.chartType](chartIdQuery, this.chartData, this.chartOptions);\n    },\n\n    /***\r\n     * Assigns a random id to the chart\r\n     */\n    updateChartId: function updateChartId() {\n      var currentTime = new Date().getTime().toString();\n      var randomInt = this.getRandomInt(0, currentTime);\n      this.chartId = \"div_\".concat(randomInt);\n    },\n    getRandomInt: function getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n  },\n  mounted: function mounted() {\n    this.updateChartId();\n    this.$nextTick(this.initChart);\n  }\n};",{"version":3,"sources":["ChartCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,MAFA,CAEA;;AAFA,KATA;AAaA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA,KAbA;AAmBA,IAAA,sBAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA,KAnBA;AAyBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA;AACA,UAAA,MAAA,EAAA,EADA;AAEA,UAAA,MAAA,EAAA;AAFA,SAAA;AAIA;AAPA,KAzBA;AAkCA,IAAA,mBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAlCA,GAFA;AAyCA,EAAA,IAzCA,kBAyCA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GA7CA;AA8CA,EAAA,OAAA,EAAA;AACA;;;AAGA,IAAA,SAJA,uBAIA;AACA,UAAA,YAAA,cAAA,KAAA,OAAA,CAAA;AACA,WAAA,SAAA,CAAA,KAAA,SAAA,EACA,YADA,EAEA,KAAA,SAFA,EAGA,KAAA,YAHA;AAKA,KAXA;;AAYA;;;AAGA,IAAA,aAfA,2BAeA;AACA,UAAA,WAAA,GAAA,IAAA,IAAA,GAAA,OAAA,GAAA,QAAA,EAAA;AACA,UAAA,SAAA,GAAA,KAAA,YAAA,CAAA,CAAA,EAAA,WAAA,CAAA;AACA,WAAA,OAAA,iBAAA,SAAA;AACA,KAnBA;AAoBA,IAAA,YApBA,wBAoBA,GApBA,EAoBA,GApBA,EAoBA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,MAAA,GAAA,GAAA,GAAA,GAAA,CAAA,CAAA,IAAA,GAAA;AACA;AAtBA,GA9CA;AAsEA,EAAA,OAtEA,qBAsEA;AACA,SAAA,aAAA;AACA,SAAA,SAAA,CAAA,KAAA,SAAA;AACA;AAzEA,CAAA","sourcesContent":["<template>\r\n  <md-card>\r\n    <md-card-header\r\n      class=\"card-chart\"\r\n      :data-background-color=\"dataBackgroundColor\"\r\n    >\r\n      <div :id=\"chartId\" class=\"ct-chart\"></div>\r\n    </md-card-header>\r\n\r\n    <md-card-content>\r\n      <slot name=\"content\"></slot>\r\n    </md-card-content>\r\n\r\n    <md-card-actions md-alignment=\"left\">\r\n      <slot name=\"footer\"></slot>\r\n    </md-card-actions>\r\n  </md-card>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"chart-card\",\r\n  props: {\r\n    footerText: {\r\n      type: String,\r\n      default: \"\"\r\n    },\r\n    headerTitle: {\r\n      type: String,\r\n      default: \"Chart title\"\r\n    },\r\n    chartType: {\r\n      type: String,\r\n      default: \"Line\" // Line | Pie | Bar\r\n    },\r\n    chartOptions: {\r\n      type: Object,\r\n      default: () => {\r\n        return {};\r\n      }\r\n    },\r\n    chartResponsiveOptions: {\r\n      type: Array,\r\n      default: () => {\r\n        return [];\r\n      }\r\n    },\r\n    chartData: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          labels: [],\r\n          series: []\r\n        };\r\n      }\r\n    },\r\n    dataBackgroundColor: {\r\n      type: String,\r\n      default: \"\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chartId: \"no-id\"\r\n    };\r\n  },\r\n  methods: {\r\n    /***\r\n     * Initializes the chart by merging the chart options sent via props and the default chart options\r\n     */\r\n    initChart() {\r\n      var chartIdQuery = `#${this.chartId}`;\r\n      this.$Chartist[this.chartType](\r\n        chartIdQuery,\r\n        this.chartData,\r\n        this.chartOptions\r\n      );\r\n    },\r\n    /***\r\n     * Assigns a random id to the chart\r\n     */\r\n    updateChartId() {\r\n      var currentTime = new Date().getTime().toString();\r\n      var randomInt = this.getRandomInt(0, currentTime);\r\n      this.chartId = `div_${randomInt}`;\r\n    },\r\n    getRandomInt(min, max) {\r\n      return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.updateChartId();\r\n    this.$nextTick(this.initChart);\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components/Cards"}]}